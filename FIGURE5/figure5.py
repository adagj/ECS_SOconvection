i#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
YEAR: 2019 - 2021

@author: ADA GJERMUNDSEN

This script will reproduce FIGURE 5 in Gjermundsen et. al 2021
The data used for plotting is generated by scripts 
contained in the same folder as this (FIGURE5) 
"""
import xarray as xr
import warnings
warnings.simplefilter('ignore')
import numpy as np
import matplotlib.pyplot as plt
import cmocean.cm as cmo
from matplotlib import colors
from scipy.stats import linregress
from mpl_toolkits.basemap import Basemap


def linearfit(ds):
    t = linregress(np.arange(0,ds.shape[0]),ds.values)
    val = t.slope*np.arange(0,ds.shape[0]) + t.intercept
    return val

if __name__ == '__main__':
    
    mm = .1/2.54  # millimeters in inches
    fig =  plt.figure(figsize=(180*mm, 100*mm))
    gs = fig.add_gridspec(2, 2*16)

#############################################################################################################
    path = 'path_to_data/'
#######################################################################################################
    sstlist={'NorESM2-hosing':['tos_Omon_NorESM2-LM_hosing_r1i1p1f1_5_5yravg.nc',
                               'tos_Omon_NorESM2-LM_piControl-hosing_r1i1p1f1_5_5yravg.nc'],
               'NorESM2-LM':['tos_Omon_NorESM2-LM_abrupt-4xCO2_r1i1p1f1_5_5yravg.nc',
                             'tos_Omon_NorESM2-LM_piControl_r1i1p1f1_5_5yravg.nc']}
   
    figlist=[r"$\bf{a)}$", r"$\bf{b)}$", r"$\bf{c)}$", r"$\bf{d)}$"]
    
    lats = [ -80, -60, -60, -80 ]
    lons = [ -60, -60, 60, 60 ]
    sstval=[-1.,2.5]
    sstlevels = np.arange(sstval[0],sstval[1]+.25,.25)
    cmap=cmo.balance
    n=0
    nn=0
    for expid, file in sstlist.items():
        m = Basemap(projection='ortho',lat_0=-90,lon_0=0,resolution='c')
        ax =  fig.add_subplot(gs[0,2*n:2*(n+3)])
        ax.cla()
        m.drawcoastlines(linewidth = .5,color='black')
        var = 'tos'
        case = xr.open_mfdataset(path + sstlist[expid][0])
        case = case[var]
        case = case.where(case.lat > -80)
        ctrl = xr.open_mfdataset(path +  sstlist[expid][1])
        ctrl = ctrl[var]
        ctrl = ctrl.where(ctrl.lat > -80)
        casevals = case.values - ctrl.values
        casevalscycl = np.zeros((len(case.lat.values),len(case.lon.values)+1))
        casevalscycl[:,:-1] = casevals
        casevalscycl[:,-1] = casevals[:,0]
        loncycl = np.append(case.lon.values, case.lon.values[-1]+np.diff(case.lon.values[0:2]))
        x, y = np.meshgrid(loncycl,case.lat.values )
        px,py = m(x, y) 
        m.contourf(px,py,casevalscycl, levels = sstlevels, cmap=cmap,
                     extend="both", norm =  colors.DivergingNorm(vmin=sstval[0], vcenter=0., vmax=sstval[1]))
        m.fillcontinents(color='lightgrey')
        m.drawcoastlines(linewidth = .5)
        parallels = np.arange(-60,0,30)
        cax4=m.drawparallels(parallels, linewidth = 0.4)
        for i in np.arange(len(parallels)):
            plt.annotate(np.str(np.abs(parallels[i]))+'째S',xy=m(220,parallels[i]+5),xycoords='data', fontsize=8)
        if nn in [0,2]:
            meridian = np.arange(0,360,60)
            cax5=m.drawmeridians(meridian,labels=[1,1,1,1], linewidth = 0.4, fontsize=8)
        else:
            meridian = np.arange(0,360,90)
            cax5=m.drawmeridians(meridian,labels=[1,1,1,1], linewidth = 0.4, fontsize=8)
        
        plt.clim(sstval[0],sstval[1])
        if expid == 'NorESM2-hosing':
            norhos5=case
            lons = np.linspace(-60,60)
            lats = np.linspace(-60,-60)
            x,y = m(lons,lats)
            m.plot(x,y, linewidth=1.5, color='black',linestyle='--')
            lons = np.linspace(-60,-60)
            lats = np.linspace(-90,-60)
            x,y = m(lons,lats)
            m.plot(x,y, linewidth=1.5, color='black',linestyle='--')
            lons = np.linspace(60,60)
            lats = np.linspace(-90,-60)
            x,y = m(lons,lats)
            m.plot(x,y, linewidth=1.5, color='black',linestyle='--')
        if expid == 'NorESM2-LM':
            noresm2 = case
        ax.set_title(figlist[nn]+ ' ' +expid +'\n', fontsize=9)#+ ' (5 years)')
        lons = np.linspace(-180,180)
        lats = np.linspace(-62,-62)
        x,y = m(lons,lats)
        m.plot(x,y, linewidth=1.5, color='yellow',linestyle='dotted')
        lats = np.linspace(-45,-45)
        x,y = m(lons,lats)
        m.plot(x,y, linewidth=1.5, color='yellow',linestyle='dotted')
        n=n+4
        nn = nn+1
    ax = fig.add_subplot(gs[0,2*n:2*(n+3)])
    ax.cla()
    m.drawcoastlines(linewidth = .5,color='black')
    casevals = noresm2.values - norhos5.values
    casevalscycl = np.zeros((len(case.lat.values),len(case.lon.values)+1))
    casevalscycl[:,:-1] = casevals
    casevalscycl[:,-1] = casevals[:,0]
    m.contourf(px,py,casevalscycl, levels = sstlevels, cmap=cmap,
                     extend="both", norm =  colors.DivergingNorm(vmin=sstval[0], vcenter=0., vmax=sstval[1]))
    m.fillcontinents(color='lightgrey')
    m.drawcoastlines(linewidth = .5)
    parallels = np.arange(-60,0,30)
    cax4=m.drawparallels(parallels, linewidth = 0.4)
    for i in np.arange(len(parallels)):
            plt.annotate(np.str(np.abs(parallels[i]))+'째S',xy=m(220,parallels[i]+5),xycoords='data', fontsize=8)
    if nn in [0,2]:
        meridian = np.arange(0,360,60)
        cax5=m.drawmeridians(meridian,labels=[1,1,1,1], linewidth = 0.4, fontsize=8)
    else:
        meridian = np.arange(0,360,90)
        cax5=m.drawmeridians(meridian,labels=[1,1,1,1], linewidth = 0.4, fontsize=8)
    plt.clim(sstval[0],sstval[1])
    lons = np.linspace(-180,180)
    lats = np.linspace(-62,-62)
    x,y = m(lons,lats)
    m.plot(x,y, linewidth=1.5, color='yellow',linestyle='dotted')
    lats = np.linspace(-45,-45)
    x,y = m(lons,lats)
    m.plot(x,y, linewidth=1.5, color='yellow',linestyle='dotted')
    ax.set_title(figlist[nn]+ ' ' +'NorESM2-LM -\nNorESM2-hosing', backgroundcolor= 'white', fontsize = 9)
    n=n+4
    nn=nn+1
    ax = fig.add_subplot(gs[0,2*n:2*(n+3)])
    case = xr.open_mfdataset(path + 'tos_Omon_CESM2_abrupt-4xCO2_r1i1p1f1_5_5yravg.nc')
    case = case[var]
    ctrl = xr.open_mfdataset(path + 'tos_Omon_CESM2_piControl_r1i1p1f1_5_5yravg.nc')
    ctrl = ctrl[var]
    casevals = case.values - ctrl.values
    casevalscycl = np.zeros((len(case.lat.values),len(case.lon.values)+1))
    casevalscycl[:,:-1] = casevals
    casevalscycl[:,-1] = casevals[:,0]
    loncycl = np.append(case.lon.values, case.lon.values[-1]+np.diff(case.lon.values[0:2]))
    x, y = np.meshgrid(loncycl,case.lat.values )
    px,py = m(x, y) 
    m.contourf(px,py,casevalscycl, levels = sstlevels, cmap=cmap,
                 extend="both", norm =  colors.DivergingNorm(vmin=sstval[0], vcenter=0., vmax=sstval[1]))
    m.fillcontinents(color='lightgrey')
    m.drawcoastlines(linewidth = .5)
    parallels = np.arange(-60,0,30)
    cax4=m.drawparallels(parallels, linewidth = 0.4)
    for i in np.arange(len(parallels)):
            plt.annotate(np.str(np.abs(parallels[i]))+'째S',xy=m(220,parallels[i]+5),xycoords='data', fontsize=8)
    if nn in [0,2]:
        meridian = np.arange(0,360,60)
        cax5=m.drawmeridians(meridian,labels=[1,1,1,1], linewidth = 0.4, fontsize=8)
    else:
        meridian = np.arange(0,360,90)
        cax5=m.drawmeridians(meridian,labels=[1,1,1,1], linewidth = 0.4, fontsize=8)
    plt.clim(sstval[0],sstval[1])
    lats = np.linspace(-62,-62)
    x,y = m(lons,lats)
    m.plot(x,y, linewidth=1.5, color='yellow',linestyle='dotted')
    lats = np.linspace(-45,-45)
    x,y = m(lons,lats)
    m.plot(x,y, linewidth=1.5, color='yellow',linestyle='dotted')
    ax.set_title(figlist[nn]+ ' ' +'CESM2\n', fontsize = 9)#' (5 years)')
    
    cax = fig.add_axes([0.9, 0.61, 0.013, 0.2 ])
    cb = plt.colorbar(cax=cax,ticks=sstlevels[::4], orientation='vertical' )
    cb.set_label(label='SST change [K]', fontsize=10)
    cb.ax.tick_params(labelsize=11) 
    
#%%
    pathobs = 'path_to_obs_trend_data/'
    filelist =['sst_HadISST_historical_1960_2014_trend.nc',
                'tos_NorESM2-LM_historical_1960_2014_ssttrend.nc',
                'tos_NorESM2-MM_historical_1960_2014_ssttrend.nc',
                'tos_CESM2_historical_1960_2014_ssttrend.nc']
    vval=[-0.1,0.4]
    dv = 0.025
    levels = np.arange(vval[0],vval[1]+dv,dv)
    figlist=[r"$\bf{e)}$", r"$\bf{f)}$", r"$\bf{g)}$", r"$\bf{h)}$"]
    cmap=cmo.balance
    n=0
    nn=0
    for file in filelist:
        ax =  fig.add_subplot(gs[1,2*n:2*(n+3)])
        ax.cla()
        m.drawcoastlines(linewidth = .5,color='black')
        if file[:3]=='tos':
            var = 'tos'
            ds = xr.open_dataset(path + file)
            ds = ds.rename({'tos_trend':'sst_trend'})
        else:
            ds = xr.open_dataset(pathobs + file)
            var = 'sst'
        m = Basemap(projection='ortho',lat_0=-90,lon_0=0,resolution='c')
        casevalscycl = np.zeros((len(ds.lat.values),len(ds.lon.values)+1))
        casevalscycl[:,:-1] = ds.sst_trend.values
        casevalscycl[:,-1] = ds.sst_trend.values[:,0]
        loncycl = np.append(ds.lon.values, ds.lon.values[-1]+np.diff(ds.lon.values[0:2]))
        x, y = np.meshgrid(loncycl,ds.lat.values )
        px,py = m(x, y)
        m.contourf(px,py, casevalscycl, levels = levels, cmap=cmap,
                    extend="both", norm = colors.DivergingNorm(vmin=vval[0], vcenter=0., vmax=vval[1]))
    
        m.plot(x,y, linewidth=1.5, color='r',linestyle='--')
        m.drawcoastlines(linewidth = .5)
        m.fillcontinents(color='lightgrey')
        m.drawmapboundary(linewidth = .5)
        parallels = np.arange(-60,0,30)
        cax4=m.drawparallels(parallels, linewidth = 0.4)
        for i in np.arange(len(parallels)):
                plt.annotate(np.str(np.abs(parallels[i]))+'째S',xy=m(240,parallels[i]+5),xycoords='data', fontsize=8)
        if nn in [0,2]:
            meridian = np.arange(0,360,60)
            cax5=m.drawmeridians(meridian,labels=[1,1,1,1], linewidth = 0.4, fontsize=8)
        else:
            meridian = np.arange(0,360,90)
            cax5=m.drawmeridians(meridian,labels=[1,1,1,1], linewidth = 0.4, fontsize=8)
        ax.set_title(figlist[nn]+ ' ' + file.split('_')[1] +'\n', fontsize=9)
        plt.clim(vval[0],vval[1])
        n=n+4
        nn = nn+1
      
    cax = fig.add_axes([0.9, 0.1, 0.013, 0.2])
    cb = plt.colorbar(cax=cax,ticks=levels[::4], orientation='vertical' )
    cb.set_label(label='SST trend [K/dec.]', fontsize=10)
    cb.ax.tick_params(labelsize=9) 
    plt.text(-23,2.21,'Initial SST anomalies (1-5 years)    ',  fontsize = 11)
    plt.text(-23,.85,'Historical SST trends (1960 - 2014)',  fontsize = 11)
    plt.subplots_adjust(left=0.05, bottom=-0.05, right=0.9, top=.95, wspace=0.5, hspace=0.)
    
